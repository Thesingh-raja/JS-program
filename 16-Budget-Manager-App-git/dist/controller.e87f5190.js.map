{"version":3,"sources":["src/js/model.js","src/js/Views/AddTransactionView.js","src/js/config.js","src/js/Views/ShowBalanceView.js","src/js/Views/ListView.js","src/js/Views/ExpenseTrackerView.js","src/js/Views/IncomeTrackerView.js","src/js/Views/index.js","src/js/controller.js"],"names":["transactionType","INCOME","EXPENSE","Transaction","type","value","Math","random","isNaN","TypeError","Error","_type","_value","id","timestamp","Date","now","AddTransactionView","document","querySelector","_form","handler","self","addEventListener","e","clearForm","_amount","parseFloat","CURRENCY_UNIT","ShowBalanceView","data","balance","getTotalBalance","console","log","_container","innerHTML","totalIncome","income","forEach","inc","totalExpense","expense","exp","Number","toFixed","toLocaleString","minimumFractionDigits","getFormatedBalance","ListView","html","generateHTMLString","_filterSelect","transaction","insertAdjacentHTML","getCardHTMLString","el","Array","isArray","date","toDateString","ExpenseTrackerView","IncomeTrackerView","getTransactionsFromLS","JSON","parse","localStorage","getItem","saveTransactionInLS","list","push","stringify","setItem","controlAddTransaction","preventDefault","amount","pushTransactionCard","controlShowBalance","render","compareAmountFn","a","b","flag","controlSortByAmount","view","shouldReverse","sort","reverse","controlFilterChange","ev","target","init","addSubmitHandler","addFilterEventHandler"],"mappings":";;AQAA;;AACA;;ANDO,AMEP,INFa4B,aAAa,GAAG,IAAtB;AGAP,ACAA,AFAA,ADAA,AKGA,IAAMmC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC3D,IAAD,EAAU;AACpC,SAAO4D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB/D,IAArB,KAA8B,IAAzC,CAAP;AACH,CAFD,EAGA;;;AACA,IAAMgE,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAChE,IAAD,EAAOiD,WAAP,EAAuB;AAC/C,MAAIgB,IAAI,GAAGN,qBAAqB,CAAC3D,IAAD,CAAhC;AACAiE,EAAAA,IAAI,CAACC,IAAL,CAAUjB,WAAV;AACAgB,EAAAA,EPTEpD,EOSE,GAAG+C,IAAI,CAACO,SAAL,CAAeF,IAAf,CAAP;AACAH,EAAAA,YAAY,CAACM,OAAb,CAAqBpE,IAArB,EAA2BiE,IAA3B;AACH,CALD;;AAOA,IAAMI,qBAAqB,GAAG,OPZlBvD,EOYNuD,MPZc,CAACtD,aAAT,CAAuB,AOYL,CAACK,CAAD,EAAO,mBPZzB;AOaRA,EAAAA,CAAC,CAACkD,cAAF;AACA,MAAMC,MAAN,GAAuB1D,sBPbb,GOaV,CAAM0D,CPbSvD,KAAL,AOaV,CPbqBD,aAAX,CAAyB,SAAzB;AOaV,MAAcf,IAAd,GAAuBa,yBAAvB,CAAcb,IAAd;AACA6B,ARjBG,EQiBHA,EJdSgB,AJHAjD,KQiBF,CAACkC,GAAR,CAAYyC,KRjBY,CQiBxB,EAAoBvE,ARjBO,IQiB3B,SPbQ,KAAKgB,KAAL,CAAWD,aAAX,CAAyB,mBAAzB;AOcR,ARjBAlB,EAAAA,IQiBMoD,ERjBA,EAAE,OQiBS,CRlBU,EQkBP,IAAIlD,kBAAJ,CAAgBC,IAAhB,EAAsBuE,MAAtB,CAApB;AACAP,ARjBAlE,EQiBAkE,ARjBAlE,EGAE2B,KHAK,EAAE,UQiBU,CAACzB,IAAD,EAAOiD,WAAP,CAAnB;ARnB2B,CAAxB;AQoBHpC,4BAAmBQ,SAAnB;WPdJ,0BAAiBJ,OAAjB,EAA0B;AAClB,AOcJ,MAAIjB,IPdMkB,AOcF,IPdM,COcDtB,EPdI,IAAb,iBOcyBE,OAA7B,EAAsC;ADrB1C,ACsBQ2D,8BAAmBe,mBAAnB,CAAuCvB,WAAvC;APdA,AOeH,GAFD,CRhBSlD,KQmBJ,EPhBIiB,KAAL,CAAWG,gBAAX,CAA4B,MELnBL,EFKT,EAAsC,ADA1C,IGLqB,CAACC,KFKqBK,CAAD,EAAO,KELpC,CAAuB,EHKxBpB,IAAZ,EAAkBC,KAAlB,EAAyB,KGLZ;AFMLgB,AMRZ,ACwBQyC,ARjBqB,QCCjBzC,GGLR,IHKe,CAACG,CAAD,CAAP,SGLDM,EIqBe8C,EJrBtB,EAAa,eIqBT,CAAsCvB,WAAtC;APfI/B,AGLJ,AIqBH,IHxBCuC,ACAAC,ILQMxC,GGLCQ,CHKG,CAACL,EGLT,GAAYK,IHKR,AGLJ;AHMC,AGLD,AGJR,APM6B,OCArB,GGFMoB,IAAI,GAAG,KAAKC,kBAAL,EAAb;AHMH,AGLG,AIoBJ0B,ARnByB,EQmBzBA,SJpBS1C,SIoBS,CJpBd,CAAgBC,SAAhB,GAA4Bc,IAA5B;AACH,AGLL,ACyBC,ARpB4B,CQM7B,ULTI,eHCkB5C,CGDXwB,GHCe,CGDtB,AHCuBvB,EGDV,IHCK,KAAgB,GAET;AGFrB,AHEqB,WGFhBuB,IAAL,GAAYA,IAAZ;AACA,AKyBR,IAAM+C,MLzBQ9C,CFOV,MEPiB,GAAG,EKyBA,GLzBKC,AKyBF,OPlBX,EOkBV6C,MLzBkB,EAAhB,UKyBmB,GAAM;APjBzB,AEPA5C,AKyBJA,ARxBI,EQwBJA,ILzBIA,AHCI,GQwBD,CAACC,CPlBCR,AGLT,EDFW,AKyBX,ARxBerB,CGDH6B,AKyBA,GLzBR,CFOA,AEPY,AHCR,CCMS7B,IDNQ,CCMrB,GAAqB,EAArB,EEPA,AHCI,EGDuB,EHCMG,GGDDuB,EHCM,CAAC1B,CICrBgB,GDFlB,CHCsC,CQwB1C,ARxBI,EICJ,AJAQ,EIAuB,IJAjB,IAAIZ,SAAJ,CAAc,sBAAd,CAAN;ACMP,AGLG,ADFA,AKyBJ,ARvBI,MQuBE6B,ARvBE,EAAElC,GIADgD,ADFAjB,CKyBG,ARvBE,GQuBC4B,CRvBG/D,KGFd,CAAgBoC,ECEhB,CAAmBb,MDFnB,AHEI,CAAJ,EACI,EQsB4B,CAACvB,GRtBvB,CIDV,CAAoC,EJCtBU,KAAJ,CIDV,AJCoB,EID0B,KDFlB,GKyBqBT,CLzBjD,CCE+CuB,CAAD,EAAO,CIuBrB,CAApC,oBRtBc,CAAN,uBGHwB,IAA5B;ACGIH,ADFP,AKyBD,ARtBI,MQsBEqB,CRtBG/B,CIDDU,IJCJ,CQsBS,EJvBE,AJCEjB,CIDDoB,AIuBAuC,CJvBD,CAAP,CJCJ,kBQsBiC,CAAC/D,uBAAgBE,OAAjB,CAArC;AJtBK,AJCD,OIHA,AJGKU,MAAL,GAAcP,KAAd;AIAH,AIsBDwB,ARrBI,OAAKhB,ECGT,ADHI,aAAaT,ECGJ,COkBG0E,CRrBZ,KQqBJ,CAAuB,QRrBEzE,KAArB,oCAA8B,IAA9B;ACIA,AOkBAiC,ARrBA,IQqBAA,GRrBKxB,GQqBC,CLbV,CKaIwB,CPlBOX,GDHP,EQoBmB,CRpBFZ,ICGA,ADHI,CCGH,ADHIC,GAAL,ECGMU,ADHvB,OCGkB,CAAarB,CEKjB,IFLG,CAAjB;AACH,AEKG,AKaAqC,ARrBH,IQqBGA,MLbIL,CKaG,EAAPK,QLbe,GAAG,CAAlB;AACA,AKUmB,GAAvB,QJpBA,ADUSZ,IAAL,CAAUQ,MAAV,CAAiBC,OAAjB,CAAyB,SCVTc,CDUSb,GAAG,EAAI,KCVpC,EAAiC;AAC7B,ADUIH,AKaX,CARD,OLLYA,GCVCF,QDUU,ECVf,CAAgBmB,CDUGd,GAAG,CAAC5B,MAAnB,OCVJ,CAAmC,YAAnC,EAAiD,KAAK2C,iBAAL,CAAuBF,WAAvB,CAAjD;AACH,ADUI,AHVR,OGQO,EFJJ,eAAW;AACP,AEMA,AKaR,IAAM0B,MLbMtC,GFNG,KAAK9B,COmBC,GLbG,AKaA,CPnBT,CAAWN,CEMC,CAAnB,GFNA,EOmBF0E,eAAkB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,IAAP,EAAgB,MHvCvBhE,ACAAA,QDAQ,ACAA,CDACC,ACAAA,aDAT,ACAA,CDAuB,ACAA,mBAAvB,EDAA;AJqBZ,AEMG,AKaJ,MAAI+D,IAAJ,CLbSpD,CKaC,GLbN,CAAUY,OAAV,CAAkBH,OAAlB,CAA0B,UAAAI,GAAG,EAAI;AAC7BF,AKaJ,QLbIA,AKaAuC,CAAC,CAACpE,CJxBV,KIwBQ,GA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","file":"controller.e87f5190.js","sourceRoot":"..","sourcesContent":["export const transactionType = {\n    INCOME: \"INCOME\",\n    EXPENSE: \"EXPENSE\"\n};\n\nexport class Transaction {\n    #secret = `adsad${Math.random() * 100}`;\n\n    constructor(type, value) {\n        if (typeof value !== \"number\" || isNaN(value))\n            throw new TypeError(\"value must be number\")\n        if (!(type in transactionType))\n            throw new Error(\"type must be INCOME or EXPENSE only\");\n        this._type = type;\n        this._value = value;\n        this.id = `${type}-${value}-${this.#secret}`;\n        this.timestamp = Date.now();\n    }\n};\n","\nclass AddTransactionView {\n    _form = document.querySelector(\".add_transaction_form\");\n    _amount = this._form.querySelector(\".amount\")\n    _type = this._form.querySelector(\".transaction_type\")\n\naddSubmitHandler(handler) {\n        const self = this;\n        this._form.addEventListener(\"submit\", (e) => {\n            handler(e);\n            self.clearForm();\n        });\n    }\n\n    clearForm() {\n        this._amount.value = \"\";\n    }\n\n    get amount() {\n        return parseFloat(this._amount.value);\n    }\n\n    get type() {\n        return this._type.value;\n    }\n}\n\nexport default new AddTransactionView();","export const CURRENCY_UNIT = \"Rs\"","import { CURRENCY_UNIT } from \"../config\";\n\nclass ShowBalanceView {\n    _container = document.querySelector(\".balance_container\");\n\n    render(data) {\n        this.data = data;\n        const balance = this.getTotalBalance();\n        console.log(\"balance is \", this.balance)\n        this._container.innerHTML = this.#generateHTMLString();\n    };\n\n\n    #generateHTMLString() {\n        return `\n        <div style=\"display:flex;flex-direction:column;align-items:center;\"> \n            <h5>Your Balance</h5>\n           <div class=\"balance bold ${this.balance > 0 ? \"green\" : \"red\"}\">\n             ${CURRENCY_UNIT} ${this.getFormatedBalance()}\n           </div>\n        </div>\n        `\n    };\n\n    getTotalBalance() {\n        let totalIncome = 0;\n        this.data.income.forEach(inc => {\n            totalIncome += inc._value;\n        });\n        let totalExpense = 0;\n        this.data.expense.forEach(exp => {\n            totalExpense += exp._value\n        });\n        this.balance = totalIncome - totalExpense;\n    };\n\n    getFormatedBalance() {\n        return Number(parseFloat(this.balance).toFixed(2)).toLocaleString('en', {\n            minimumFractionDigits: 2\n        })\n    }\n};\n\nexport default new ShowBalanceView();","import { CURRENCY_UNIT } from \"../config\";\n\n\nexport class ListView {\n    render(data) {\n        this.data = data;\n        const html = this.generateHTMLString();\n        this._container.innerHTML = html;\n    }\n    \n    addFilterEventHandler(handler) {\n        this._filterSelect.addEventListener(\"change\", (e) => {\n            handler(e)\n        })\n    }\n\n    pushTransactionCard(transaction) {\n        this._container.insertAdjacentHTML(\"afterbegin\", this.getCardHTMLString(transaction))\n    }\n\n    getCardHTMLString(el) {\n        return ` <div class=\"card transaction_card\" style=\"display:flex; justify-content:space-between\">\n        <div class=${el._type === \"EXPENSE\" ? \"red\" : \"green\"}\n         style=\"font-weight:bolder;\"> ${el._type === \"EXPENSE\" ? \"-\" : \"\"}\n          ${el._value} ${CURRENCY_UNIT}</div>\n        <div>${this.#getDateByTimeStamp(el.timestamp)}</div>\n      </div>`\n    }\n\n    generateHTMLString() {\n        let html = \"\";\n        if (Array.isArray(this.data)) {\n            this.data.forEach(el => {\n                html += this.getCardHTMLString(el);\n            })\n        }\n        return html;\n    }\n\n    #getDateByTimeStamp(timestamp) {\n        let date = new Date(timestamp);\n        return date.toDateString();\n    }\n\n}","import { ListView } from \"./ListView\";\n\nclass ExpenseTrackerView extends ListView {\n    _container = document.querySelector(\".expenses_container\")\n    _filterSelect = document.querySelector(\".expense_filter\");  \n};\n\nexport default new ExpenseTrackerView();","import { ListView } from \"./ListView\";\n\nclass IncomeTrackerView extends ListView {\n    _container = document.querySelector(\".income_container\");\n    _filterSelect = document.querySelector(\".income_filter\")\n};\n\nexport default new IncomeTrackerView();","import AddTransactionView from \"./AddTransactionView\"\nimport ShowBalanceView from \"./ShowBalanceView\"\nimport ExpenseTrackerView from \"./ExpenseTrackerView\"\nimport IncomeTrackerView from \"./IncomeTrackerView\"\nexport {\n    AddTransactionView,\n    ShowBalanceView,\n    ExpenseTrackerView,\n    IncomeTrackerView\n}","import { Transaction, transactionType } from \"./model\";\nimport { AddTransactionView, ShowBalanceView, ExpenseTrackerView, IncomeTrackerView } from \"./Views\"\n// to get old data\nconst getTransactionsFromLS = (type) => {\n    return JSON.parse(localStorage.getItem(type) || '[]')\n}\n//to save data in local storage\nconst saveTransactionInLS = (type, transaction) => {\n    let list = getTransactionsFromLS(type);\n    list.push(transaction);\n    list = JSON.stringify(list);\n    localStorage.setItem(type, list);\n}\n\nconst controlAddTransaction = (e) => {\n    e.preventDefault();\n    let { amount, type } = AddTransactionView;\n    console.log(amount, type)\n    const transaction = new Transaction(type, amount);\n    saveTransactionInLS(type, transaction);\n    AddTransactionView.clearForm();\n    if (type === transactionType.EXPENSE) {\n        ExpenseTrackerView.pushTransactionCard(transaction);\n    }\n    else {\n        IncomeTrackerView.pushTransactionCard(transaction);\n    }\n    controlShowBalance();\n}\n\n\n\nconst controlShowBalance = () => {\n    console.log(\"StorageChangeListener triggered\");\n    const income = getTransactionsFromLS(transactionType.INCOME);\n    const expense = getTransactionsFromLS(transactionType.EXPENSE);\n    ShowBalanceView.render({\n        income,\n        expense\n    })\n};\n\nconst compareAmountFn = (a, b, flag) => {\n    if (flag) {\n        if (a._value < b._value) {\n            return -1;\n        }\n        if (a._value > b._value) {\n            return 1;\n        }\n        // a must be equal to b\n        return 0;\n\n    } else {\n        if (a._value > b._value) {\n            return -1;\n        }\n        if (a._value < b._value) {\n            return 1;\n        }\n        // a must be equal to b\n        return 0;\n    }\n}\nconst controlSortByAmount = (list, view, flag, shouldReverse) => {\n    if (Array.isArray(list)) {\n        list.sort((a, b) => compareAmountFn(a, b, flag));\n        console.log(\"sorted list is\", list)\n        if (shouldReverse) list = list.reverse()\n        view.render(list);\n    }\n};\n\nconst controlFilterChange = (ev) => {\n    console.log(ev.target.value)\n    if (ev.target.id === \"income_filter\") {\n        if (ev.target.value === \"Amount+\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.INCOME),\n                IncomeTrackerView, false)\n        }\n\n        if (ev.target.value === \"Amount-\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.INCOME),\n                IncomeTrackerView, true)\n        }\n\n        if (ev.target.value === \"none\") {\n            IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME));\n        }\n    } else {\n        if (ev.target.value === \"Amount+\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.EXPENSE),\n                ExpenseTrackerView, false, true)\n        }\n\n        if (ev.target.value === \"Amount-\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.EXPENSE),\n                ExpenseTrackerView, true, true)\n        }\n\n        if (ev.target.value === \"none\") {\n            ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE));\n        }\n    }\n\n}\n\nconst init = () => {\n    AddTransactionView.addSubmitHandler(controlAddTransaction);\n    controlShowBalance();\n    ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE))\n    ExpenseTrackerView.addFilterEventHandler(controlFilterChange)\n    IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME))\n    IncomeTrackerView.addFilterEventHandler(controlFilterChange)\n};\ninit();"]}